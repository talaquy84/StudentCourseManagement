
CREATE TABLE STUDENT
  (CWID       INT NOT NULL,
   First_Name VARCHAR(30) NOT NULL,
   Last_Name  VARCHAR(30) NOT NULL,
   Birth_Date CHAR(10) NOT NULL,
   Phone      CHAR(10) NOT NULL,
   Email      VARCHAR(100) NOT NULL,
   CONSTRAINT STUDENTPK
    PRIMARY KEY(CWID));

CREATE TABLE PROFESSOR
  (Employee_ID       INT NOT NULL,
   First_Name VARCHAR(30) NOT NULL,
   Last_Name  VARCHAR(30) NOT NULL,
   Birth_Date CHAR(10) NOT NULL,
   Phone      CHAR(10) NOT NULL,
   Email      VARCHAR(100) NOT NULL,
   CONSTRAINT EMPLOYEEPK
    PRIMARY KEY(Employee_ID));

CREATE TABLE DEPARTMENT
  (Department_ID INT NOT NULL,
   Department_Name VARCHAR(30) NOT NULL,
   CONSTRAINT DEPARTMENTPK
    PRIMARY KEY(Department_ID));


CREATE TABLE TEXTBOOK
  (ISBN INT NOT NULL,
   Author VARCHAR(50) NOT NULL,
   Name VARCHAR(50) NOT NULL,
   CONSTRAINT TEXTBOOKPK
    PRIMARY KEY(ISBN));


CREATE TABLE COURSE
  (Course_ID INT NOT NULL,
   Course_Name VARCHAR(50) NOT NULL,
   Pre_req_course VARCHAR(50),
   Department_ID INT NOT NULL,
   CONSTRAINT COURSEPK
    PRIMARY KEY(Course_ID, Department_ID),
   CONSTRAINT COURSEDEPARTMENTFK
    FOREIGN KEY(Department_ID) REFERENCES DEPARTMENT(Department_ID)
	
	);


CREATE TABLE COURSE_SECTION
  ( Course_ID INT NOT NULL,
    Department_ID INT NOT NULL,
    Section_ID INT NOT NULL,
    Employee_ID INT NOT NULL,
    Class_Time VARCHAR(10) NOT NULL,
    Days_Of_Week VARCHAR(7) NOT NULL,
	Max_Seats INT NOT NULL,
	Occupied_Seats INT DEFAULT 0,
    CONSTRAINT COURSESECTIONPK
      PRIMARY KEY (Course_ID, Section_ID, Department_ID),
    CONSTRAINT SECTIONDEPARTMENTFK
      FOREIGN KEY( Course_ID, Department_ID) REFERENCES COURSE( Course_ID, Department_ID)
      ON UPDATE CASCADE  ON DELETE CASCADE,
    --CONSTRAINT COURSEFK
    --  FOREIGN KEY(Course_ID) REFERENCES COURSE(Course_ID)
    --  ON UPDATE CASCADE   ON DELETE CASCADE,
    CONSTRAINT PROFESSORFK
      FOREIGN KEY(Employee_ID) REFERENCES PROFESSOR(Employee_ID)
      ON UPDATE CASCADE ON DELETE CASCADE);




CREATE TABLE STUDENT_TAKES_COURSE
 (  CWID       INT NOT NULL,
   Course_ID INT NOT NULL,
   Section_ID INT NOT NULL,
   Department_ID INT NOT NULL,
  CONSTRAINT STUDENT_TAKES_COURSEPK
   PRIMARY KEY(CWID, Course_ID, Section_ID, Department_ID),
  CONSTRAINT STUDENTFK
    FOREIGN KEY(CWID) REFERENCES STUDENT(CWID)
    ON UPDATE CASCADE   ON DELETE CASCADE,
  CONSTRAINT STUDENTCOURSEFK
    FOREIGN KEY(Course_ID, Section_ID, Department_ID) REFERENCES COURSE_SECTION(Course_ID, Section_ID, Department_ID)
    ON UPDATE CASCADE   ON DELETE CASCADE);

CREATE TABLE COURSE_SECTION_HAS_TEXTBOOK
  (  ISBN       INT NOT NULL,
    Course_ID INT NOT NULL,
    Section_ID INT NOT NULL,
	Department_ID INT NOT NULL,
   CONSTRAINT COURSE_HAS_TEXTBOOKPK
    PRIMARY KEY(ISBN, Course_ID),
   CONSTRAINT TEXTBOOKFK
     FOREIGN KEY(ISBN) REFERENCES TEXTBOOK(ISBN)
     ON UPDATE CASCADE   ON DELETE CASCADE,
   CONSTRAINT COURSETEXTFK
     FOREIGN KEY(Course_ID, Section_ID, Department_ID) REFERENCES COURSE_SECTION(Course_ID, Section_ID, Department_ID)
     ON UPDATE CASCADE   ON DELETE CASCADE);
